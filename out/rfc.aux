\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\abx@aux@refcontext{nty/global//global/global}
\abx@aux@cite{0}{aalborg}
\abx@aux@segm{0}{0}{aalborg}
\abx@aux@cite{0}{harper}
\abx@aux@segm{0}{0}{harper}
\abx@aux@cite{0}{metal}
\abx@aux@segm{0}{0}{metal}
\abx@aux@cite{0}{mentor-applications}
\abx@aux@segm{0}{0}{mentor-applications}
\abx@aux@cite{0}{centaur}
\abx@aux@segm{0}{0}{centaur}
\abx@aux@cite{0}{yacc}
\abx@aux@segm{0}{0}{yacc}
\abx@aux@cite{0}{zephyr}
\abx@aux@segm{0}{0}{zephyr}
\abx@aux@cite{0}{asn1}
\abx@aux@segm{0}{0}{asn1}
\@writefile{toc}{\contentsline {section}{\numberline {1}Implementation}{1}{section.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Representing Syntax}{1}{subsection.1.1}\protected@file@percent }
\abx@aux@cite{0}{harper}
\abx@aux@segm{0}{0}{harper}
\abx@aux@cite{0}{aalborg}
\abx@aux@segm{0}{0}{aalborg}
\abx@aux@cite{0}{c-iso-standard}
\abx@aux@segm{0}{0}{c-iso-standard}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.1}Specification language}{2}{subsubsection.1.1.1}\protected@file@percent }
\newlabel{ex:c-spec}{{1}{2}{Specification language}{tcb@cnt@example.1}{}}
\newlabel{ex:c-spec@cref}{{[tcb@cnt@example][1][]1}{[1][2][]2}}
\abx@aux@cite{0}{postgresql-about}
\abx@aux@segm{0}{0}{postgresql-about}
\newlabel{ex:as-sql-lang}{{2}{4}{Specification language}{tcb@cnt@example.2}{}}
\newlabel{ex:as-sql-lang@cref}{{[tcb@cnt@example][2][]2}{[1][4][]4}}
\newlabel{fig:spec-lang-bnf}{{1}{5}{Specification language}{figure.1}{}}
\newlabel{fig:spec-lang-bnf@cref}{{[figure][1][]1}{[1][5][]5}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Specification language in BNF notation}}{5}{figure.1}\protected@file@percent }
\newlabel{fig:sql-lang-parseable}{{2}{5}{Specification language}{figure.2}{}}
\newlabel{fig:sql-lang-parseable@cref}{{[figure][2][]2}{[1][5][]5}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Subset of syntax of a small SQL language in a parseable format}}{5}{figure.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Code generation versus generic model}{5}{subsection.1.2}\protected@file@percent }
\newlabel{ex:c-alg-data-types}{{3}{6}{Code generation versus generic model}{tcb@cnt@example.3}{}}
\newlabel{ex:c-alg-data-types@cref}{{[tcb@cnt@example][3][]3}{[1][5][]6}}
\abx@aux@cite{0}{haskell-records-named-fields}
\abx@aux@segm{0}{0}{haskell-records-named-fields}
\abx@aux@cite{0}{elm-codegen-package}
\abx@aux@segm{0}{0}{elm-codegen-package}
\newlabel{lst:elm-ex}{{1}{7}{Elm Records for storing syntax information}{lstlisting.1}{}}
\newlabel{lst:elm-ex@cref}{{[listing][1][]1}{[1][7][]7}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1}Elm Records for storing syntax information}{7}{lstlisting.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}Generating source code}{7}{subsection.1.3}\protected@file@percent }
\abx@aux@cite{0}{elm-codegen-package}
\abx@aux@segm{0}{0}{elm-codegen-package}
\newlabel{fig:codegen-ex}{{3}{8}{Generating source code}{figure.3}{}}
\newlabel{fig:codegen-ex@cref}{{[figure][3][]3}{[1][8][]8}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Elm CodeGen usage}}{8}{figure.3}\protected@file@percent }
\newlabel{lst:raw-syntax-model}{{2}{8}{Raw syntax model in Elm}{lstlisting.2}{}}
\newlabel{lst:raw-syntax-model@cref}{{[listing][2][]2}{[1][8][]8}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2}Raw syntax model in Elm}{8}{lstlisting.2}\protected@file@percent }
\newlabel{lst:syntax-model}{{3}{9}{Syntax model}{lstlisting.3}{}}
\newlabel{lst:syntax-model@cref}{{[listing][3][]3}{[1][9][]9}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3}Syntax model}{9}{lstlisting.3}\protected@file@percent }
\abx@aux@cite{0}{elm-typeclass-package}
\abx@aux@segm{0}{0}{elm-typeclass-package}
\newlabel{ex:parser-to-elm-codegen}{{4}{10}{Generating source code}{tcb@cnt@example.4}{}}
\newlabel{ex:parser-to-elm-codegen@cref}{{[tcb@cnt@example][4][]4}{[1][10][]10}}
\newlabel{lst:haskell-typeclass}{{4}{11}{Haskell typeclass example}{lstlisting.4}{}}
\newlabel{lst:haskell-typeclass@cref}{{[listing][4][]4}{[1][11][]11}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4}Haskell typeclass example}{11}{lstlisting.4}\protected@file@percent }
\newlabel{lst:elm-typeclass}{{5}{11}{Elm typeclass simulation example}{lstlisting.5}{}}
\newlabel{lst:elm-typeclass@cref}{{[listing][5][]5}{[1][11][]11}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {5}Elm typeclass simulation example}{11}{lstlisting.5}\protected@file@percent }
\abx@aux@cite{0}{aalborg}
\abx@aux@segm{0}{0}{aalborg}
\abx@aux@cite{0}{aalborg}
\abx@aux@segm{0}{0}{aalborg}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}Decomposing trees}{12}{subsection.1.4}\protected@file@percent }
\newlabel{lst:base-ex}{{6}{12}{Example of the Base type}{lstlisting.6}{}}
\newlabel{lst:base-ex@cref}{{[listing][6][]6}{[1][12][]12}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {6}Example of the Base type}{12}{lstlisting.6}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Two different decompositions of the same term}}{13}{figure.4}\protected@file@percent }
\newlabel{fig:sql-decomp-ex}{{4}{13}{Two different decompositions of the same term}{figure.4}{}}
\newlabel{fig:sql-decomp-ex@cref}{{[figure][4][]4}{[1][13][]13}}
\abx@aux@cite{0}{elm-codegen-package}
\abx@aux@segm{0}{0}{elm-codegen-package}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.1}Cursor path}{14}{subsubsection.1.4.1}\protected@file@percent }
\newlabel{lst:cursor-path-fun-gen}{{7}{14}{getCursorPath function generator}{lstlisting.7}{}}
\newlabel{lst:cursor-path-fun-gen@cref}{{[listing][7][]7}{[1][14][]14}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {7}getCursorPath function generator}{14}{lstlisting.7}\protected@file@percent }
\newlabel{ex:cursor-path-c}{{5}{15}{Cursor path}{tcb@cnt@example.5}{}}
\newlabel{ex:cursor-path-c@cref}{{[tcb@cnt@example][5][]5}{[1][15][]15}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.2}Cursor context}{15}{subsubsection.1.4.2}\protected@file@percent }
\newlabel{lst:to-cc-fun-gen}{{8}{15}{toCCtx function generator}{lstlisting.8}{}}
\newlabel{lst:to-cc-fun-gen@cref}{{[listing][8][]8}{[1][15][]15}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {8}toCCtx function generator}{15}{lstlisting.8}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.3}Well-formed tree}{16}{subsubsection.1.4.3}\protected@file@percent }
\newlabel{lst:to-wf-fun-gen}{{9}{17}{toWellFormed function generator}{lstlisting.9}{}}
\newlabel{lst:to-wf-fun-gen@cref}{{[listing][9][]9}{[1][16][]17}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {9}toWellFormed function generator}{17}{lstlisting.9}\protected@file@percent }
\abx@aux@read@bbl@mdfivesum{5ACA980859DA3295B75B8387D9B8A483}
\newlabel{LastPage}{{1.4.3}{17}{Well-formed tree}{page.17}{}}
\gdef\lastpage@lastpage{17}
\gdef\lastpage@lastpageHy{17}
\gdef \@abspage@last{17}
